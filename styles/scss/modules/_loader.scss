.LoadingAnimationContainer {
  position: relative;
  width: 100%;
  height: 100%;
  @include alignCenter;
  flex-direction: column;

  .loader {
    position: relative;
    width: 200px;
    height: 200px;
    perspective: 200px;
    transform-type: preserve-3d;

    .dot {
      position: absolute;
      top: 50%;
      left: 50%;

      width: 120px;
      height: 120px;

      margin-top: -60px;
      margin-left: -60px;

      border-radius: 100px;
      border: 40px outset var(--PrimaryColor);

      transform-type: preserve-3d;
      transform-origin: 50% 50%;

      transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);

      background-color: transparent;

      animation: dot1 1000ms cubic-bezier(0.49, 0.06, 0.43, 0.85) infinite;
    }

    .dot:nth-child(2) {
      width: 140px;
      height: 140px;

      margin-top: -70px;
      margin-left: -70px;

      border-width: 30px;
      border-color: var(--PrimaryColor);

      animation-name: dot2;
      animation-delay: 75ms;

      box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
      transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
    }

    .dot:nth-child(3) {
      width: 160px;
      height: 160px;

      margin-top: -80px;
      margin-left: -80px;

      border-width: 20px;
      border-color: var(--SecondaryColor);

      animation-name: dot3;
      animation-delay: 150ms;

      box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
      transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
    }
  }

  .text {
    margin-top: 20px;
    height: 20px;
  }
}

.LoadingInit {
  position: absolute;
  background-color: white;
  width: 100vw;
  height: 100vh;
  z-index: 100;
  @include alignCenter;
  animation: disappear 500ms ease forwards 1.6s;

  > * {
    position: absolute;
  }

  .leftDiagonal,
  .rightDiagonal {
    width: 58%;
    height: 100%;
  }

  .leftDiagonal {
    left: 0;
    clip-path: polygon(0% 0%, 100% 0%, 75% 100%, 0% 100%);
    background-color: var(--PrimaryColor);
    animation: SlideLeft 1s ease forwards 1.35s;
  }
  .rightDiagonal {
    clip-path: polygon(0% 0%, 100% 0%, 75% 100%, 0% 100%);
    right: 0;
    background-color: var(--SecondaryColor);
    transform: translateX(0) rotate(180deg);
    animation: SlideRight 1s ease forwards 1.35s;
  }
  .CoveryTitleAnimation {
    width: 35%;
    height: auto;
    max-width: 350px;
    fill: transparent;
    animation: FillWriting 500ms ease forwards 0.8s;

    path:nth-child(2) {
      stroke-dashoffset: 500;
      stroke-dasharray: 500;
      animation: HandWriting 300ms linear forwards 100ms;
    }
    path:nth-child(3) {
      stroke-dashoffset: 500;
      stroke-dasharray: 500;
      animation: HandWriting 300ms linear forwards 200ms;
    }
    path:nth-child(4) {
      stroke-dashoffset: 500;
      stroke-dasharray: 500;
      animation: HandWriting 300ms linear forwards 300ms;
    }
    path:nth-child(5) {
      stroke-dashoffset: 550;
      stroke-dasharray: 550;
      animation: HandWriting 300ms linear forwards 400ms;
    }
    path:nth-child(6) {
      stroke-dashoffset: 500;
      stroke-dasharray: 500;
      animation: HandWriting 300ms linear forwards 500ms;
    }
    path:nth-child(7) {
      stroke-dashoffset: 500;
      stroke-dasharray: 500;
      animation: HandWriting 300ms linear forwards 600ms;
    }
  }
}

@keyframes HandWriting {
  // from {
  //   stroke-dashoffset: 500;
  //   stroke-dasharray: 500;
  // }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes FillWriting {
  from {
    fill: transparent;
  }
  to {
    fill: white;
  }
}

@keyframes SlideLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes SlideRight {
  // from {
  //   transform: translateX(0) rotate(180deg);
  // }
  to {
    transform: translateX(100%) rotate(180deg);
  }
}

@keyframes disappear {
  from {
    visibility: visible;
    opacity: 1;
  }
  to {
    visibility: hidden;
    opacity: 0;
  }
}

@keyframes dot1 {
  0% {
    border-color: var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
  50% {
    border-color: var(--SecondaryColor);
    transform: rotateX(20deg) rotateY(20deg) rotateZ(50deg) translateZ(0px);
  }
  100% {
    border-color: var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
}

@keyframes dot2 {
  0% {
    border-color: var(--PrimaryColor);
    box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
  50% {
    border-color: var(--SecondaryColor);
    box-shadow: inset 0 0 15px 0 var(--SecondaryColor);
    transform: rotateX(20deg) rotateY(20deg) rotateZ(50deg) translateZ(0px);
  }
  100% {
    border-color: var(--PrimaryColor);
    box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
}

@keyframes dot3 {
  0% {
    border-color: var(--SecondaryColor);
    box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
  50% {
    border-color: var(--PrimaryColor);
    box-shadow: inset 0 0 15px 0 var(--SecondaryColor);
    transform: rotateX(20deg) rotateY(20deg) rotateZ(50deg) translateZ(0px);
  }
  100% {
    border-color: var(--SecondaryColor);
    box-shadow: inset 0 0 15px 0 var(--PrimaryColor);
    transform: rotateX(24deg) rotateY(20deg) rotateZ(0deg) translateZ(-25px);
  }
}
